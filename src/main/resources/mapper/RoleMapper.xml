<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leis.bear.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.leis.bear.domain.Role">
        <id column="role_id" jdbcType="INTEGER" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_user" jdbcType="VARCHAR" property="createUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_user" jdbcType="VARCHAR" property="updateUser"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.leis.bear.domain.Role">
        <selectKey keyProperty="roleId" order="BEFORE" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_role (role_id, role_name, create_time,
        create_user, update_time, update_user,
        remark)
        values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR},
        #{remark,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.leis.bear.domain.Role">
        update t_role
        set role_name   = #{roleName,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            create_user = #{createUser,jdbcType=VARCHAR},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            update_user = #{updateUser,jdbcType=VARCHAR},
            remark      = #{remark,jdbcType=VARCHAR}
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select role_id, role_name, create_time, create_user, update_time, update_user, remark
        from t_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select role_id, role_name, create_time, create_user, update_time, update_user, remark
        from t_role
    </select>

    <select id="selectRoleByUserId" resultMap="BaseResultMap">
        select tr.role_id, role_name, create_time, create_user, update_time, update_user, remark
        from t_role tr
                 left join t_user_role tur
                           on tr.role_id = tur.role_id
        where tur.user_id = #{userId}
    </select>
</mapper>